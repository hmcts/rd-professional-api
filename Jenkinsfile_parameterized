#!groovy
@Library("Infrastructure") _

properties([
    parameters([
        string(name: 'PRODUCT_NAME', defaultValue: 'ia', description: ''),
        string(name: 'APP', defaultValue: 'sys-ref-data-api', description: 'System Reference Data API'),
        string(name: 'TYPE', defaultValue: 'java', description: ''),
        string(name: 'ENVIRONMENT', defaultValue: 'sandbox', description: 'Environment where code should be build and deployed'),
        choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod\nprod', description: 'Azure subscriptions available to build in')
    ]),
    [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/rd-sys-ref-data-api.git'],
    pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

List<LinkedHashMap<String, Object>> secrets = [
    secret('s2s-url', 'S2S_URL'),
    secret('postgres-password', 'POSTGRES_USERNAME'),
    secret('s2s-url', 'POSTGRES_PASSWORD'),
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [$class     : 'AzureKeyVaultSecret',
     secretType : 'Secret',
     name       : secretName,
     version    : '',
     envVariable: envVar
    ]
}

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {

    setVaultName('rd')
    loadVaultSecrets(secrets)

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    }
}
