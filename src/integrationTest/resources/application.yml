spring:
  flyway:
    schemas: DBREFDATA
    locations: classpath:db/migration

  jpa:
    show-sql: true
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  datasource:
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:dbrefdata
    username: ${POSTGRES_USERNAME:dbrefdata}
    password: ${POSTGRES_PASSWORD:dbrefdata}
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:http://0.0.0.0:6000/o}
        registration:
          oidc:
            client-id: microservicekey-rd-professional-api
            client-secret: DUMMY

auth.provider.service.client.baseUrl: ${S2S_URL:http://127.0.0.1:8990}

select-dataload-schedular-audit: SELECT * FROM dataload_schedular_audit

select-bulk_customer: SELECT * FROM bulk_customer_details

delete-bulk_customer: DELETE FROM bulk_customer_details

prdEnumRoleType: ADMIN_ROLE,JURISD_ID

resendInviteEnabled : true

allowedStatus: ACTIVE

idam:
  s2s-auth:
    totp_secret: DUMMY
    microservice: rd_professional_api
    url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
  s2s-authorised:
    services: rd_professional_api
  api.url: ${IDAM_URL:http://127.0.0.1:5000}
  client:
    redirect_uri: https://rd-professional-api-aat.service.core-compute-aat.internal/oauth2redirect
    id: rd-professional-api


## IDAM feign connection
auth.idam.client.baseUrl: ${http://127.0.0.1:5000/o}
prd:
  security:
    roles:
      hmcts-admin: prd-admin
      pui-user-manager: pui-user-manager
      pui-organisation-manager: pui-organisation-manager
      pui-finance-manager: pui-finance-manager
      pui-case-manager: pui-case-manager
      pui-caa: pui-caa
      caseworker-caa: caseworker-caa
      prd-aac-system: prd-aac-system
  scheduler:
    cronExpression: ${CRON_EXPRESSION:* */1 * * * *}
    enabled: ${SCHEDULER_ENABLED:false}
    lockAtLeastFor: ${Lock_AT_Least_For:PT1M}
    lockAtMostFor: ${Lock_AT_Most_For:PT2M}
    defaultLockAtMostFor: ${Default_Lock_At_Most_For:PT3M}

## user profile feign connection
user.profile.api.url: ${USER_PROFILE_URL:http://127.0.0.1:8091}

oidc:
  issuer: ${OIDC_ISSUER:http://127.0.0.1:5000/openam/oauth2/hmcts}
  expiration: 14400000 # milliseconds 4 hours

# resent user invite interval in minutes
resendInterval: 60

# sync time interval in minutes
syncInterval: 60

defaultPageSize: ${DEFAULTPAGESIZE:10}

loggingComponentName: RD_Professional_API


aggregation-strategy-completion-size: 100
aggregation-strategy-timeout: 2000
archival-route: direct:ProfessionalDataArchival
archival-path: ${archival.path}
active-blob-path: azure-blob://${azure.storage.account-name}/prd-ref-data
archival-file-names: ${archival.file.names}
archival-cred: credentials=#credsreg&operation=updateBlockBlob
archival-date-format: dd-MM-yyyy--HH-mm
file-read-time-out: 180000
batchjob-name: ProfessionalDataLoad
scheduler-audit-select: select count(*) from dataload_schedular_audit where date(scheduler_start_time) = current_date
invalid-exception-sql: insert into dataload_exception_records(table_name,scheduler_start_time,scheduler_name,error_description,updated_timestamp) values(?, ?, ?, ?, ?)
invalid-jsr-sql: insert into dataload_exception_records(table_name,scheduler_start_time,scheduler_name,key,field_in_error,error_description,updated_timestamp,row_id) values(?, ?, ?, ?, ?, ?, ?,?)
scheduler-insert-sql: insert into dataload_schedular_audit (scheduler_name,file_name, scheduler_start_time,scheduler_end_time,status) values(?,?,?,?,?)
audit-enable: true
logging-component-name: RD_Professional_API
component:
  name: Professional Reference Data API
flag-code-query: select id from user_details

professional-user-details-start-route: direct:Professional-UserDetails
professional-user-details-route-task: userDetailsRouteTask
professional-user-details-routes-to-execute: professional-user-details-load
route:
  #Route: professional-user-details-load
  professional-user-details-load:
    id: professional-user-details-load
    file-name: ${parent.file.name:''}
    table-name: bulk_customer_details
    truncate-sql:
      sql:truncate table bulk_customer_details
    insert-sql:
      sql:insert into bulk_customer_details (id,organisation_id,bulk_customer_id,sidam_id,pba_number)
      values (:#id, :#organisation_id,:#bulk_customer_id,:#sidam_id,:#pba_number)
    blob-path: ${parent.file.path}
    processor-class: BulkCustomerDetailsProcessor
    mapper-class: BulkCustomerDetailsMapper
    csv-binder-object: BulkCustomerDetails
    csv-headers-expected: Organisation_ID,Bulk_Customer_ID,Sidam_ID,PBA
    header-validation-enabled: true