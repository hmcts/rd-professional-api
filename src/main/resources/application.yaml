server:
  port: ${PORT:8090}

management:
  endpoints:
    jmx:
      exposure:
        include: 'health'
    web:
      base-path: "/"
  endpoint:
    health:
      show-details: "always"

spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    open-in-view: ${JPA_OPEN_IN_VIEW:true}
    properties:
      hibernate:
        default_schema: dbrefdata
        jdbc:
          lob:
            non_contextual_creation: true
  application:
    name: Professional Reference Data API
  profiles:
    include:
      - lib
      - camel-routes-common
      - prd-user-details-router
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: ${OPEN_ID_API_BASE_URI:https://idam-web-public.aat.platform.hmcts.net/o}
        registration:
          oidc:
            client-id: microservicekey-rd-professional-api
            client-secret: ${PROFESSIONAL_API_S2S_SECRET:}
  jackson.date-format: yyyy-MM-dd
  flyway.enabled: true
  flyway.schemas: dbrefdata
  flyway.locations: classpath:db/migration,classpath:db/postgres
  cache:
    cache-names: token
    caffeine:
      spec: maximumSize=50,expireAfterWrite=1m

### database configuration
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5428}/${POSTGRES_NAME:dbrefdata}${POSTGRES_CONNECTION_OPTIONS:}
    username: ${POSTGRES_USERNAME:dbrefdata}
    password: ${POSTGRES_PASSWORD:dbrefdata}
    properties:
      charSet: UTF-8
    hikari:
      minimumIdle: 2
      maximumPoolSize: ${HIKARI_MAX_POOL_SIZE:50}
      idleTimeout: 600000
      poolName: PRDHikariCP
      maxLifetime: 1800000
      connectionTimeout: 5000
    tomcat:
      max-active: 10
      max-idle: 10
      min-idle: 2
      max-wait: 10000
      test-on-borrow: true
      test-on-connect: true
      test-on-idle: true
      validation-query: "SELECT 1"
      time-between-eviction-runs-millis: 10000
      test-while-idle: true
      test-on-return: true
      remove-abandoned: true
      remove-abandoned-timeout: 60
      log-abandoned: true
      abandon-when-percentage-full: 0

  config:
    import: "optional:configtree:/mnt/secrets/rd/"

security:
  anonymousPaths:
    - "/"
    - "/health"
    - "/health/readiness"
    - "/health/liveness"
    - "/actuator/**"
    - "/loggers/**"
    - "/swagger-ui.html"
    - "/swagger-resources/**"
    - "/v3/api-docs"
    - "/v3/**"
    - "/swagger-ui/**"
    - "/webjars/springfox-swagger-ui/**"
    - "/csrf"
    - "/error"
    - "/favicon.ico"
### dependency configuration
idam:
  s2s-auth:
    totp_secret: ${PROFESSIONAL_API_S2S_SECRET:}
    microservice: rd_professional_api
    url: ${S2S_URL:http://rpe-service-auth-provider-aat.service.core-compute-aat.internal}
  s2s-authorised:
    services: ${PRD_S2S_AUTHORISED_SERVICES:rd_professional_api,rd_user_profile_api,xui_webapp,finrem_payment_service,fpl_case_service,iac,aac_manage_case_assignment,divorce_frontend}
  api.url: ${idam_url:https://idam-api.aat.platform.hmcts.net}

oidc.issuer: ${OIDC_ISSUER_URL:https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts}

## Secure roles configuration
prd:
  security:
    roles:
      hmcts-admin: prd-admin
      pui-user-manager: pui-user-manager
      pui-organisation-manager: pui-organisation-manager
      pui-finance-manager: pui-finance-manager
      pui-case-manager: pui-case-manager
  scheduler:
    cronExpression: ${CRON_EXPRESSION:* */10 * * * *}
    enabled: ${SCHEDULER_ENABLED:false}
    lockAtLeastFor: ${Lock_AT_Least_For:PT10M}
    lockAtMostFor: ${Lock_AT_Most_For:PT20M}
    defaultLockAtMostFor: ${Default_Lock_At_Most_For:PT30M}

prdEnumRoleType: ADMIN_ROLE,JURISD_ID
jurisdictionIdType: ADMIN_ROLE,CCD_ROLE,SIDAM_ROLE
allowedStatus: ACTIVE

userProfUrl: ${USER_PROFILE_URL:http://rd-user-profile-api-aat.service.core-compute-aat.internal}

feign:
  allow:
    headers:
      - authorization
      - serviceauthorization

defaultPageSize: ${DEFAULTPAGESIZE:10}

resendInviteEnabled : true

# delete organisation enabled
deleteOrganisationEnabled : ${DELETE_ORG:false}

# get Active Orgs External enabled
activeOrgsExternalEnabled : ${ACTIVE_ORG_EXT:false}

loggingComponentName: RD_Professional_API

launchdarkly:
  sdk:
    key: ${LD_SDK_KEY:}
    environment: ${LAUNCH_DARKLY_ENV:local}
    user: rd


azure:
  storage:
    account-name: ${ACCOUNT_NAME:ACCOUNT_NAME}
    account-key: ${ACCOUNT_KEY:ACCOUNT_KEY}
    container-name: ${CONTAINER_NAME:CONTAINER_NAME}
    blob-url-suffix: ${BLOB_URL_SUFFIX:BLOB_URL_SUFFIX}