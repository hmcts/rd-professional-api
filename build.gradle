buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.83")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'jacoco'
    id 'pmd'
    id 'com.github.ben-manes.versions' version '0.27.0'
    id "info.solidsoft.pitest" version '1.3.0'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.owasp.dependencycheck' version '5.3.0'
    id 'org.sonarqube' version '2.8'
    id 'org.springframework.boot' version '2.2.5.RELEASE'
    id "org.flywaydb.flyway" version "5.0.7"
    id 'au.com.dius.pact' version '4.0.7'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'

def versions = [
        lombok             : '1.18.6',
        gradlePitest       : '1.3.0',
        pitest             : '1.4.2',
        reformHealthStarter: '0.0.5',
        reformLogging      : '5.1.0',
        reformS2sClient    : '3.0.0',
        serenity           : '2.0.23',
        sonarPitest        : '0.5',
        springBoot         : '2.1.4.RELEASE',
        springHystrix      : '2.1.1.RELEASE',
        springfoxSwagger   : '2.9.2',
        pact_version       : '3.5.24'
]

mainClassName = 'uk.gov.hmcts.reform.professionalapi.Application'
def jarName = 'rd-professional-api.jar'

group = 'uk.gov.hmcts.reform.refdata'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.80
            }
        }
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

sourceSets {

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    testContract {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
    testPact {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/pactTest/java')
        }
        resources.srcDir file('src/pactTest/resources')
    }

}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestCompile.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
}

check.dependsOn jacocoTestCoverageVerification

checkstyle {
    maxWarnings = 0
    toolVersion = '8.10.1'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

pmd {
    toolVersion = '6.12.0'
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.functionalTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = [
            'category/java/errorprone.xml',
            'category/java/bestpractices.xml'
    ]
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

    systemProperty "scenario", System.getProperty('scenario')

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}

task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
    // Nothing to do here
    println 'pact tests have been moved to pactPublish'
}

jacoco {
    toolVersion = "0.8.1"
}

jacocoTestReport {
    executionData(test, integration)
    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

pitest {
    targetClasses = ['uk.gov.hmcts.reform.professionalapi.*']
    excludedClasses = [
            'uk.gov.hmcts.reform.professionalapi.configuration.*',
            'uk.gov.hmcts.reform.professionalapi.controller.*',
            'uk.gov.hmcts.reform.professionalapi.Application'
    ]
    threads = 10
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = ['build/reports/pitest/fastermutationtesting']
    historyOutputLocation = ['build/reports/pitest/fastermutationtestingoutput']
    outputFormats = ['XML', 'HTML']
    timestampedReports = true
    mutationThreshold = 90   

}


project.tasks['pitest'].group = "Verification"

sonarqube {
    properties {
        property "sonar.projectName", "RD :: Professional Reference Data api"
        property "sonar.projectKey", "RDPROFESSIONALAPI"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
        property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/professionalapi/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/professionalapi/SystemDateProvider.java," +
                "src/main/java/uk/gov/hmcts/reform/professionalapi/Application.java"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

repositories {

    maven {
        url "https://dl.bintray.com/hmcts/hmcts-maven"
    }

    jcenter()
}

dependencies {
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: versions.springHystrix
    compile group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: versions.springBoot

    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.5.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.2'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.2'
    compile group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
    compile group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

    compile group: 'uk.gov.hmcts.reform', name: 'logging', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.reformLogging
    compile group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.0.4'
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.reformS2sClient
    compile group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: versions.reformHealthStarter
    compile(group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.4') {
        // TODO remove when auth-checker-lib upgrades its dependency to spring boot 2.0.x
        exclude group: 'uk.gov.hmcts.reform', module: 'java-logging-spring'

    }

    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.8'


    compile group: 'com.google.guava', name: 'guava', version: '28.2-jre'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompile("org.hamcrest:hamcrest-junit:2.0.0.0") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '4.0.0'
    testCompile group: 'io.rest-assured', name: 'rest-assured-common', version: '4.2.0'

    testCompile group: 'com.h2database', name: 'h2'
    testCompile "com.github.tomakehurst:wiremock:2.19.0"

    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.3.1'
    testCompile group: 'org.mockito', name: 'mockito-inline', version: '3.1.0'

    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.4'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot

    testCompile group: 'org.pitest', name: 'pitest', version: versions.pitest
    testCompile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
    testCompile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

    testCompile group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testCompile group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    testCompile(group: 'org.yaml', name: 'snakeyaml', version: '1.25') {
        force = true
    }

    integrationTestCompile(group: 'org.yaml', name: 'snakeyaml', version: '1.23') {
        force = true
    }

    functionalTestCompile(group: 'org.yaml', name: 'snakeyaml', version: '1.23') {
        force = true
    }

    testContractCompile(group: 'au.com.dius', name:'pact-jvm-consumer-junit5_2.12', version: versions.pact_version) {
        force = true
    }

    integrationTestCompile sourceSets.main.runtimeClasspath
    integrationTestCompile sourceSets.test.runtimeClasspath

    functionalTestCompile sourceSets.main.runtimeClasspath
    functionalTestCompile sourceSets.test.runtimeClasspath

    smokeTestCompile sourceSets.main.runtimeClasspath
    smokeTestCompile sourceSets.test.runtimeClasspath

    testContractCompile sourceSets.main.runtimeClasspath
    testContractCompile sourceSets.test.runtimeClasspath

    testPactCompile sourceSets.main.runtimeClasspath
    testPactCompile sourceSets.test.runtimeClasspath
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    // FIXME temp disabled with 42
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 0 : 11
    println 'Hi from dependencyCheck'
    suppressionFiles = ['config/owasp/suppressions.xml']
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

gradle.startParameter.continueOnFailure = true

bootJar {
    archiveName = jarName
    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

pact {
    publish {
        pactDirectory = 'target/pacts'
        //pactBrokerUrl = 'http://localhost:9292'
        pactBrokerUrl = 'https://pact-broker.platform.hmcts.net'
        tags = ['Dev']
        //version = project.pactVersion
    }
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
